{"version":3,"sources":["webpack:///./src/data/projectsOrderJSON.js","webpack:///./src/data/tagOrderJSON.js","webpack:///./src/utils/sortingFunctions.js","webpack:///./src/components/projects/hoverdata.js","webpack:///./src/components/projects/project.js","webpack:///./src/components/projects/projectsfilter.js","webpack:///./src/components/projects/projectspagination.js","webpack:///./src/components/projects/tagsfilter.js","webpack:///./src/pages/projects.js"],"names":["projectOrder","tagOrder","HoverData","data","handleTagClick","HoverContainer","className","title","location","category","TagsContainer","tags","map","tag","Tag","key","onClick","e","styled","div","theme","red","size3","white","size2","size1","Project","slug","ProjectContainer","style","width","imgStyle","transition","fixed","featuredImage","childImageSharp","aspectRatio","to","ProjectsFilter","selectedTab","setSelectedTab","dispatch","tabSelected","Repaint","ButtonContainer","FilterButton","target","name","chosen","breakpoints","vp7","button","props","lightGray","boxShadow","ProjectsPagination","setSelectedPage","totalPages","chosenPage","pageNumbers","i","push","length","PaginateContainer","TextButton","color","display","disabled","number","PageButton","black","vp6","gray","TagsFilter","selectedFilter","useState","tagButtonText","setTagButtonText","selectedIndex","findIndex","sliceIndex","slice","FilterContainer","TagContainer","height","TagButton","prevState","query","ProjectsPage","useContext","StateContext","pageInfo","currentProjects","setCurrentProjects","displayedProjects","setDisplayedProjects","currentTags","setCurrentTags","sortedProjects","useMemo","raw","specified","unspecified","el","node","fields","includes","orderedSpecified","sort","a","b","indexOf","orderedUnspecified","frontmatter","sortProjects","allMarkdownRemark","edges","scrollToDiv","useRef","useEffect","filteredProjects","filter","project","tab","filterSliced","page","current","scrollIntoView","behavior","block","sortedTags","sortTags","projects","tagsDict","grabTags","preventDefault","changeFilters","ref","ProjectsContainer","size","Math","ceil"],"mappings":"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","file":"component---src-pages-projects-js-313ea1658faf9a1b3934.js","sourcesContent":["const projectOrder = [\n    '/westin-vue/',\n    '/aria-at-park-shore/',\n    '/belle-harbor/',\n    '/sarasota-bay-club/',\n    '/orchid-beach-club/',\n    '/oceanside-on-pompano-beach/',\n]\nexport default projectOrder;\n","const tagOrder = [\n    'Abrasive Blasting',\n    'Texture Coatings',\n    'Wallcovering',\n    'Stain Work'\n]\nexport default tagOrder;\n","import projectOrder from '../data/projectsOrderJSON.js';\nimport tagOrder from '../data/tagOrderJSON';\n\nexport const sortProjects = raw => {\n    const specified = [];\n    const unspecified = [];\n    for (let el of raw) {\n        let slug = el.node.fields.slug;\n        if (projectOrder.includes(slug)) {\n            specified.push(el);\n        } else {\n            unspecified.push(el);\n        }\n    }\n    let orderedSpecified = specified.sort((a, b) =>\n        projectOrder.indexOf(a.node.fields.slug) >\n        projectOrder.indexOf(b.node.fields.slug)\n            ? 1\n            : -1\n    );\n    let orderedUnspecified = unspecified.sort((a, b) =>\n        a.node.frontmatter.title > b.node.frontmatter.title ? 1 : -1\n    );\n    let projects = [...orderedSpecified, ...orderedUnspecified];\n\n    return projects;\n};\n\nexport const sortTags = raw => {\n    const specified = [];\n    const unspecified = [];\n\n    for (let tag of raw) {\n        if (tagOrder.includes(tag[0])) {\n            specified.push(tag);\n        } else {\n            unspecified.push(tag);\n        }\n    }\n\n    let orderedSpecified = specified.sort((a, b) =>\n        tagOrder.indexOf(a[0]) > tagOrder.indexOf(b[0]) ? 1 : -1\n    );\n    let orderedUnspecified = unspecified.sort((a, b) => b[1] - a[1]);\n    let projects = [...orderedSpecified, ...orderedUnspecified];\n\n    return projects;\n};\n\n\nexport const grabTags = (projects, category) => {\n    const tags = []\n    const tagsDict = {}\n    \n    for(let project of projects){\n        if(category === 'Show All' || category === project.node.frontmatter.category){\n            let tags = project.node.frontmatter.tags\n            for(let tag of tags){\n                tagsDict[tag] = (tagsDict[tag] || 0) + 1\n            }\n        }\n    }\n\n    for(let tag in tagsDict){\n        tags.push([tag, tagsDict[tag]])\n    }\n\n    return tags\n}","import React from 'react';\nimport styled from 'styled-components';\n\nexport const HoverData = ({ data, handleTagClick }) => {\n    return (\n        <HoverContainer className=\"mask\">\n            <span className=\"project-title\">{data.title}</span>\n            <span className=\"project-location\">{data.location}</span>\n            <span className=\"project-category\">{data.category}</span>\n            <TagsContainer>\n                {data.tags.map(tag => (\n                    <Tag key={tag} onClick={(e) => handleTagClick(e, tag)}>{tag}</Tag>\n                ))}\n            </TagsContainer>\n        </HoverContainer>\n    );\n};\n\nconst HoverContainer = styled.div`\n    position: absolute;\n    top: 0px;\n    background: rgba(0, 0, 0, 0.75);\n    height: 100%;\n    width: 100%;\n    opacity: 0;\n    transition: 0.5s ease;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5% 0;\n\n    .project-title {\n        color: ${({ theme }) => theme.red};\n        font-size: ${({ theme }) => theme.size3};\n        font-weight: 700;\n    }\n\n    .project-category {\n        color: ${({ theme }) => theme.white};\n        font-style: italic;\n        font-size: ${({ theme }) => theme.size2};\n    }\n\n    .project-location {\n        color: ${({ theme }) => theme.white};\n        font-size: ${({ theme }) => theme.size2};\n    }\n`;\n\nconst Tag = styled.div`\n    color: ${({ theme }) => theme.white};\n    background: rgba(255, 0, 0, 1);\n    font-size: ${({ theme }) => theme.size1};\n    width: auto;\n    margin: 5px 7px;\n    padding: 5px;\n    border-radius: 5px;\n    letter-spacing: 0.05rem;\n    &:hover {\n        transform: scale(1.15);\n    }\n`;\n\nconst TagsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 auto;\n    justify-content: center;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport { HoverData } from './hoverdata';\n\nexport const Project = ({ data, slug, handleTagClick }) => {\n    return (\n        <ProjectContainer>\n            <Img\n                style={{ width: '100%' }}\n                imgStyle={{\n                    transition: 'opacity 0.5s ease 0s, transform 1s ease',\n                }}\n                fixed={{\n                    ...data.featuredImage.childImageSharp.fixed,\n                    aspectRatio: 1.5,\n                }}\n            />\n            <Link to={`${slug}`}>\n                <HoverData data={data} handleTagClick={handleTagClick} />\n            </Link>\n        </ProjectContainer>\n    );\n};\n\nconst ProjectContainer = styled.div`\n    --photo-width: calc((100% - 60px)/3);\n    width: var(--photo-width);\n    max-width: 420px;\n    min-width: 340px;\n    position: relative;\n    overflow: hidden;\n    margin: 10px;\n\n    &:hover img {\n        transform: scale(1.2);\n    }\n\n    &:hover .mask {\n        opacity: 1;\n    }\n\n    .hoverContainer {\n        cursor: pointer;\n    }\n\n    @media (max-width: 1200px){\n        --photo-width: calc((100% - 40px)/2);\n        width: var(--photo-width);\n    }\n\n    @media (max-width: 800px){\n        width: 100%;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { breakpoints } from '../../styles/breakpoints';\n\nexport const ProjectsFilter = ({ selectedTab, setSelectedTab, dispatch }) => {\n    let tabSelected = {\n        'Show All': false,\n        'New Construction': false,\n        Repaint: false,\n    };\n    tabSelected[selectedTab] = true;\n\n    return (\n        <ButtonContainer>\n            <FilterButton\n                onClick={e => setSelectedTab(dispatch, e.target.name)}\n                name=\"Show All\"\n                width=\"18%\"\n                chosen={tabSelected['Show All']}\n            >\n                SHOW ALL\n            </FilterButton>\n            <FilterButton\n                onClick={e => setSelectedTab(dispatch, e.target.name)}\n                name=\"New Construction\"\n                width=\"38%\"\n                chosen={tabSelected['New Construction']}\n            >\n                NEW CONSTRUCTION\n            </FilterButton>\n            <FilterButton\n                onClick={e => setSelectedTab(dispatch, e.target.name)}\n                name=\"Repaint\"\n                width=\"38%\"\n                chosen={tabSelected['Repaint']}\n            >\n                REPAINT / RESTORATION\n            </FilterButton>\n        </ButtonContainer>\n    );\n};\n\nconst ButtonContainer = styled.div`\n    width: 90%;\n    max-width: 675px;\n    margin: 0 auto 2rem;\n    display: flex;\n    justify-content: space-between;\n\n    ${breakpoints.vp7} {\n        flex-direction: column;\n        justify-content: center;\n        align-items: center\n    }\n`;\n\nconst FilterButton = styled.button`\n    height: 50px;\n    width: ${props => props.width};\n    font-size: ${({ theme }) => theme.size2};\n    font-weight: 700;\n    color: ${({ theme }) => theme.white};\n    background: ${props =>\n        props.chosen ? props.theme.red : props.theme.lightGray};\n    border: none;\n    cursor: pointer;\n    margin: 5px 0 5px;\n\n    &:hover {\n        box-shadow: ${({ theme }) => theme.boxShadow};\n        background: ${({ chosen, theme }) =>\n            chosen ? theme.red : `rgba(255, 0, 0, 0.4)`};\n        transition: 0.3s;\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    ${breakpoints.vp7} {\n        width: 240px;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { breakpoints } from '../../styles/breakpoints';\n\nexport const ProjectsPagination = ({\n    setSelectedPage,\n    dispatch,\n    totalPages,\n    chosenPage,\n}) => {\n    let pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) pageNumbers.push(i);\n    return (\n        <>\n            {pageNumbers.length > 1 && (\n                <PaginateContainer>\n                    <TextButton\n                        onClick={() => setSelectedPage(dispatch, 1)}\n                        color=\"black\"\n                        display=\"temporary\"\n                        disabled={chosenPage === 1}\n                    >\n                        START\n                    </TextButton>\n                    <TextButton\n                        onClick={() => {\n                            if (chosenPage > 1)\n                                setSelectedPage(dispatch, chosenPage - 1);\n                        }}\n                        color=\"black\"\n                        display=\"permanent\"\n                        disabled={chosenPage === 1}\n                    >\n                        PREV\n                    </TextButton>\n                    {pageNumbers.map(number => {\n                        return (\n                            <PageButton\n                                chosen={number === chosenPage}\n                                key={number}\n                                onClick={() =>\n                                    setSelectedPage(dispatch, number)\n                                }\n                            >\n                                {number}\n                            </PageButton>\n                        );\n                    })}\n                    <TextButton\n                        onClick={() => {\n                            if (chosenPage < totalPages)\n                                setSelectedPage(dispatch, chosenPage + 1);\n                        }}\n                        color=\"red\"\n                        display=\"permanent\"\n                        disabled={chosenPage === totalPages}\n                    >\n                        NEXT\n                    </TextButton>\n                    <TextButton\n                        onClick={() => setSelectedPage(dispatch, totalPages)}\n                        color=\"red\"\n                        display=\"temporary\"\n                        disabled={chosenPage === totalPages}\n                    >\n                        END\n                    </TextButton>\n                </PaginateContainer>\n            )}\n        </>\n    );\n};\n\nconst PaginateContainer = styled.div`\n    margin: 0 auto;\n    width: 90%;\n    max-width: 500px;\n    display: flex;\n    justify-content: space-between;\n    height: 40px;\n    margin-top: 15px;\n`;\n\nconst PageButton = styled.button`\n    width: 40px;\n    background-color: #fff;\n    font-size: ${({ theme }) => theme.size2};\n    color: ${({ theme, chosen }) => (chosen ? theme.red : theme.black)};\n    border: none;\n    font-weight: 700;\n    cursor: pointer;\n    &:focus {\n        outline: none;\n    }\n    ${breakpoints.vp6} {\n        display: none;\n    }\n`;\n\nconst TextButton = styled.button`\n    width: 75px;\n    color: ${({ theme }) => theme.white};\n    font-size: ${({ theme }) => theme.size2};\n    background-color: ${({ theme, color, disabled }) =>\n        disabled ? theme.gray : color === 'red' ? theme.red : theme.black};\n    border: none;\n    cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n    font-weight: 700;\n    margin: 0 1rem;\n    &:hover {\n        box-shadow: ${({ theme, disabled }) =>\n            disabled ? 'none' : theme.boxShadow};\n    }\n    &:focus {\n        outline: none;\n    }\n    ${breakpoints.vp6} {\n        width: 45%;\n        display: ${({ display }) =>\n            display === 'permanent' ? 'inline' : 'none'};\n    }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const TagsFilter = ({ selectedFilter, tags, handleTagClick }) => {\n    const [tagButtonText, setTagButtonText] = useState(false);\n    let selectedIndex = tags.findIndex(tag => tag[0] === selectedFilter);\n    let sliceIndex = selectedIndex > 10 ? selectedIndex + 1 : 10;\n    let displayedTags = tagButtonText ? tags : tags.slice(0, sliceIndex);\n\n    return (\n        <FilterContainer>\n            <TagContainer height={tagButtonText  ? 'auto' : '38px'}>\n                {tags.map(tag => (\n                    <Tag\n                        chosen={selectedFilter === tag[0]}\n                        onClick={e => handleTagClick(e, tag[0])}\n                        key={tag[0]}\n                    >\n                        {`${tag[0]} (${tag[1]})`}\n                    </Tag>\n                ))}\n            </TagContainer>\n            {tags.length > 10 && (\n                <TagButton\n                    onClick={() => setTagButtonText(prevState => !prevState)}\n                >\n                    {tagButtonText ? 'Show Less' : 'Show More'}\n                </TagButton>\n            )}\n        </FilterContainer>\n    );\n};\n\nconst FilterContainer = styled.div`\n    width: 69%;\n    display: flex;\n    justify-content: flex-start;\n    margin: 0 auto;\n    align-content: flex-start;\n    max-width: 1330px;\n`\n\nconst TagContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    max-height: ${({ height }) => height};\n    overflow: hidden;\n`;\n\nconst Tag = styled.div`\n    color: ${({ chosen, theme }) => (chosen ? theme.white : theme.black)};\n    background: ${({ chosen, theme }) => (chosen ? theme.red : theme.white)};\n    font-size: ${({ theme }) => theme.size1};\n    letter-spacing: 0.05rem;\n    width: auto;\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 5px;\n    margin: 5px;\n    box-shadow: ${({ theme }) => theme.boxShadow};\n    &:hover {\n        background: ${({ chosen, theme }) =>\n            chosen ? theme.red : `rgba(255, 0, 0, 0.4)`};\n        transition: 0.5s;\n        }\n`;\n\nconst TagButton = styled.button`\n    color: ${({ theme }) => theme.red};\n    background: ${({ theme }) => theme.white};\n    border: none;\n    font-size: ${({ theme }) => theme.size1};\n    line-height: 38px;\n    padding: 0;\n    cursor: pointer;\n    white-space: nowrap;\n    height: 38px;\n\n    &:focus {\n        outline: none;\n    }\n`;\n","import React, { useState, useEffect, useContext, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport { sortProjects, sortTags, grabTags } from '../utils/sortingFunctions';\nimport {\n    StateContext,\n    setSelectedPage,\n    setSelectedTab,\n    changeFilters,\n} from '../globalState';\nimport { LayoutScroll, SEO } from '../components/global';\nimport {\n    Project,\n    ProjectsFilter,\n    ProjectsPagination,\n    TagsFilter,\n} from '../components/projects';\n\n\nconst ProjectsPage = ({ data }) => {\n    let ITEM_PER_PAGE = 12;\n\n    const [{ pageInfo }, dispatch] = useContext(StateContext);\n    //current-projects selected based on tabs/filters\n    const [currentProjects, setCurrentProjects] = useState([]);\n    //projects being shown on current page\n    const [displayedProjects, setDisplayedProjects] = useState([]);\n    //tags being shown based on current tab selected\n    const [currentTags, setCurrentTags] = useState([]);\n\n    //Memoized so projects are only sorted once or when edges changes\n    let sortedProjects = useMemo(\n        () => sortProjects(data.allMarkdownRemark.edges),\n        [data.allMarkdownRemark.edges]\n    );\n\n    //ref for a div inside layoutScroll to scroll into view on page change\n    let scrollToDiv = useRef();\n\n    useEffect(() => {\n        let filteredProjects = sortedProjects;\n        //if any filters have been selected\n        if (pageInfo.filter) {\n            //get projects that have matching filter\n            filteredProjects = filteredProjects.filter(project => {\n                let projectTags = project.node.frontmatter.tags;\n                if (projectTags.includes(pageInfo.filter)) return project;\n            });\n        }\n\n        if (pageInfo.tab === 'Repaint')\n            filteredProjects = filteredProjects.filter(\n                project => project.node.frontmatter.category === 'Repaint'\n            );\n        else if (pageInfo.tab === 'New Construction')\n            filteredProjects = filteredProjects.filter(\n                project =>\n                    project.node.frontmatter.category === 'New Construction'\n            );\n        //all filtering done, now get 15 that should show up on current page\n        let filterSliced = filteredProjects.slice(\n            ITEM_PER_PAGE * (pageInfo.page - 1),\n            ITEM_PER_PAGE * pageInfo.page\n        );\n\n        setCurrentProjects(filteredProjects);\n        setDisplayedProjects(filterSliced);\n\n        if (scrollToDiv.current)\n            scrollToDiv.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center',\n            });\n    }, [\n        pageInfo.filter,\n        pageInfo.page,\n        pageInfo.tab,\n        ITEM_PER_PAGE,\n        sortedProjects,\n    ]);\n    \n    useEffect(() => {\n        let availableTags = grabTags(sortedProjects, pageInfo.tab);\n        let sortedTags = sortTags(availableTags);\n        setCurrentTags(sortedTags);\n    }, [pageInfo.tab, sortedProjects]);\n\n    const handleTagClick = (e, tag) => {\n        e.preventDefault();\n        if (pageInfo.filter === tag) changeFilters(dispatch, 'remove', tag);\n        else changeFilters(dispatch, 'add', tag);\n    };\n\n    return (\n        <LayoutScroll ref={scrollToDiv}>\n            <SEO title=\"Projects\" />\n\n            <ProjectsFilter\n                selectedTab={pageInfo.tab}\n                setSelectedTab={setSelectedTab}\n                dispatch={dispatch}\n            />\n            <TagsFilter\n                selectedFilter={pageInfo.filter}\n                tags={currentTags}\n                handleTagClick={handleTagClick}\n            />\n            <ProjectsContainer size={displayedProjects.length}>\n                {displayedProjects.map(project => (\n                    <Project\n                        key={project.node.frontmatter.title}\n                        data={project.node.frontmatter}\n                        slug={project.node.fields.slug}\n                        handleTagClick={handleTagClick}\n                    />\n                ))}\n            </ProjectsContainer>\n            <ProjectsPagination\n                setSelectedPage={setSelectedPage}\n                dispatch={dispatch}\n                totalPages={Math.ceil(currentProjects.length / ITEM_PER_PAGE)}\n                chosenPage={pageInfo.page}\n            />\n        </LayoutScroll>\n    );\n};\n\nexport default ProjectsPage;\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n        ) {\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        category\n                        location\n                        tags\n                        title\n                        featuredImage {\n                            childImageSharp {\n                                fixed(quality: 100, width: 420, height: 280) {\n                                    ...GatsbyImageSharpFixed\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst ProjectsContainer = styled.div`\n    --photo-width: calc((100% - 60px) / 3);\n    display: flex;\n    flex-wrap: wrap;\n    align-content: space-between;\n    margin: 0 auto;\n    width: 90%;\n    max-width: 1344px;\n\n    //if less than 3 photos, left align them\n    justify-content: ${({ size }) =>\n        size < 3 ? 'flex-start' : 'space-between'};\n\n    //if the last row has less than 3 photos, left align\n    &::after {\n        content: '';\n        flex: 0 0 var(--photo-width);\n        margin: 10px;\n    }\n\n    @media (max-width: 1200px) {\n        --photo-width: calc((100% - 40px) / 2);\n        justify-content: space-evenly;\n        &::after {\n            content: '';\n            flex: 0 0 var(--photo-width);\n            margin: 10px;\n        }\n    }\n`;\n"],"sourceRoot":""}